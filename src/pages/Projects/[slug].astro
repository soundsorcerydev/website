---
import Layout from "../../layouts/Layout.astro";
import { sanityClient } from "../../lib/sanityClient";
import { Vimeo, YouTube } from "astro-embed";

export async function getStaticPaths() {
    const projects = await sanityClient.fetch(`
        *[_type == "project" && showInNavbar == true] {
        "slug": slug.current
        }
    `);

    return projects.map((project: { slug: string }) => ({
        params: { slug: project.slug },
        props: { slug: project.slug },
    }));
}

const { slug } = Astro.props;

//GROQ query
const gallery = await sanityClient.fetch(
    `
  *[_type == "project" && slug.current == $slug][0]{
    title,
    description,
    mainImage {
      asset->{
        _id,
        url
      }
    },
    sections[] {
      title,
      description,
      quotes,
      photos[] {
        asset->{
          _id,
          url
        },
        caption,
        alt
      },
      videos[] {
        title,
        url,
        caption
      }
    }
  }
`,
    { slug },
);

function getVideoType(url: string) {
    if (url.includes("youtube.com") || url.includes("youtu.be")) {
        return "youtube";
    } else if (url.includes("vimeo.com")) {
        return "vimeo";
    }
    return "other";
}

const sections = gallery.sections || [];
---

<Layout>
    <article
        class="w-max-screen h-full flex flex-col items-center justify-center px-10"
    >
        <h2 class="text-4xl p-4 uppercase text-center">
            {gallery.title}
        </h2>
        {
            gallery.mainImage?.asset?.url && (
                <img
                    src={gallery.mainImage.asset.url}
                    alt={gallery.title}
                    class="w-full max-h-96 object-cover rounded-md mb-6"
                />
            )
        }
        {
            gallery.description && (
                <div class="text-justify pb-8">
                    <p>{gallery.description}</p>
                </div>
            )
        }

        <!-- Gallery Sections -->
        {
            sections.map((section: any) => (
                <div class="flex flex-col items-center justify-center mb-12">
                    <h2 class="text-2xl font-bold text-pink mb-3 text-center">
                        {section.title}
                    </h2>
                    {section.description && (
                        <div class="mb-4 p-4 text-justify">
                            <p>{section.description}</p>
                        </div>
                    )}
                    {section.quotes && (
                        <div class="flex justify-center items-center w-3/4 mb-4 p-4 border-x-2 border-green">
                            <p class="italic font-bold">{section.quotes}</p>
                        </div>
                    )}
                    <div class="flex flex-row flex-wrap justify-center gap-4">
                        {section.photos &&
                            section.photos.map(
                                (photo: {
                                    asset?: { url?: string };
                                    caption?: string;
                                    alt?: string;
                                }) => (
                                    <div class="">
                                        {photo.asset?.url && (
                                            <img
                                                src={photo.asset.url}
                                                alt={photo.alt || section.title}
                                                class="w-96 h-64 object-cover rounded-md"
                                            />
                                        )}
                                        {photo.caption && (
                                            <div class="absolute bottom-0 left-0 right-0 bg-black bg-opacity-60 text-white p-2 text-sm rounded-b-md">
                                                {photo.caption}
                                            </div>
                                        )}
                                    </div>
                                ),
                            )}
                    </div>
                    <div>
                        {section.videos && section.videos.length > 0 && (
                            <div class="flex flex-col">
                                {section.videos.map(
                                    (video: {
                                        title: string;
                                        url: string;
                                        caption?: string;
                                    }) => {
                                        const videoType = getVideoType(
                                            video.url,
                                        );
                                        return (
                                            <div class="video-container mb-4">
                                                <h3 class="text-lg font-medium mb-2">
                                                    {video.title}
                                                </h3>
                                                {videoType === "youtube" && (
                                                    <YouTube id={video.url} />
                                                )}
                                                {videoType === "vimeo" && (
                                                    <Vimeo id={video.url} />
                                                )}
                                                {videoType === "other" && (
                                                    <a
                                                        href={video.url}
                                                        target="_blank"
                                                        rel="noopener noreferrer"
                                                        class="block text-pink hover:underline"
                                                    >
                                                        Watch Video:{" "}
                                                        {video.title}
                                                    </a>
                                                )}
                                                {video.caption && (
                                                    <p class="text-sm text-gray-600 mt-2">
                                                        {video.caption}
                                                    </p>
                                                )}
                                            </div>
                                        );
                                    },
                                )}
                            </div>
                        )}
                    </div>
                </div>
            ))
        }
    </article>
</Layout>

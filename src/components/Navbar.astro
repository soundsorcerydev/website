---
import { getCollection } from "astro:content";

const { pathname } = Astro.url;
const isHomepage = pathname === "/";

const projectPosts = await getCollection("projects");
const projects = projectPosts.map((project) => ({
    name: project.data.title,
    path: `Projects/${project.slug}`,
}));

const navItems = [
    {
        name: "Home",
        path: "",
    },
    {
        name: "About",
        path: "About",
        submenu: [
            { name: "Who We Are", path: "About/whoweare" },
            { name: "Core Team", path: "About/coreteam" },
            { name: "Collaborator", path: "About/collaborator" },
            {
                name: "What's On",
                path: "https://events.humanitix.com/host/soundsorcery",
                external: true,
            },
        ],
    },
    {
        name: "Projects",
        path: "Projects",
        submenu: projects,
    },
    { name: "Sponsors", path: "sponsors" },
    { name: "Donate", path: "donate" },
    { name: "Blog", path: "blog" },
    { name: "Contact", path: "contact" },
];

const buildUrl = (path, external) => {
    return external ? path : pathname === "/" ? path : `/${path}`;
};
---

<header class="sticky top-0 z-50 bg-transparent backdrop-blur-xs">
    <!-- Desktop Nav -->
    <nav class="hidden md:flex justify-center bg-dark-pink rounded-md p-1">
        {
            navItems.map((item) => (
                <div class="relative group px-3 py-2">
                    {item.submenu ? (
                        <>
                            <button class="text-offwhite hover:text-pink uppercase">
                                {item.name}
                            </button>
                            <div class="absolute hidden group-hover:block bg-dark-pink rounded-md mt-1 min-w-[200px]">
                                {item.submenu.map((sub) => (
                                    <a
                                        href={buildUrl(sub.path, sub.external)}
                                        class="block px-4 py-2 text-offwhite hover:text-pink"
                                        target={sub.external ? "_blank" : null}
                                    >
                                        {sub.name}
                                        {sub.external && " ↗"}
                                    </a>
                                ))}
                            </div>
                        </>
                    ) : (
                        <a
                            href={buildUrl(item.path, item.external)}
                            class="text-offwhite hover:text-pink uppercase"
                        >
                            {item.name}
                        </a>
                    )}
                </div>
            ))
        }
    </nav>

    <!-- Mobile Nav -->
    <div
        id="mobile-header"
        class={`md:hidden ${isHomepage ? "bg-green" : "bg-light-pink"}`}
    >
        <div class="flex justify-between p-4">
            <div></div>
            <button
                id="mobile-toggle"
                class={`font-medium ${isHomepage ? "text-offwhite" : "text-pink"}`}
            >
                Menu
            </button>
        </div>

        <div id="mobile-menu" class="hidden bg-dark-pink">
            <div class="p-4 space-y-4">
                {
                    navItems.map((item) => (
                        <div class="mb-4">
                            {item.submenu ? (
                                <details class="group">
                                    <summary class="flex justify-between items-center text-offwhite hover:text-pink uppercase cursor-pointer">
                                        {item.name}
                                        <span class="transform group-open:rotate-180">
                                            ▿
                                        </span>
                                    </summary>
                                    <div class="pl-4 mt-2 space-y-2">
                                        {item.submenu.map((sub) => (
                                            <a
                                                href={buildUrl(
                                                    sub.path,
                                                    sub.external,
                                                )}
                                                class="block py-1 text-offwhite hover:text-pink"
                                                target={
                                                    sub.external
                                                        ? "_blank"
                                                        : null
                                                }
                                            >
                                                {sub.name}
                                                {sub.external && " ↗"}
                                            </a>
                                        ))}
                                    </div>
                                </details>
                            ) : (
                                <a
                                    href={buildUrl(item.path, item.external)}
                                    class="block text-offwhite hover:text-pink uppercase"
                                >
                                    {item.name}
                                </a>
                            )}
                        </div>
                    ))
                }
            </div>
        </div>
    </div>
</header>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const toggle = document.getElementById("mobile-toggle");
        const menu = document.getElementById("mobile-menu");
        const header = document.getElementById("mobile-header");
        const isHomepage = window.location.pathname === "/";

        toggle?.addEventListener("click", () => {
            const isOpening = menu.classList.toggle("hidden");

            if (isOpening) {
                header.classList.remove("bg-dark-pink");
                header.classList.add(isHomepage ? "bg-green" : "bg-light-pink");
                toggle.classList.remove("text-offwhite");
                toggle.classList.add(
                    isHomepage ? "text-offwhite" : "text-pink",
                );
            } else {
                header.classList.remove(
                    isHomepage ? "bg-green" : "bg-light-pink",
                );
                header.classList.add("bg-dark-pink");
                toggle.classList.remove(
                    isHomepage ? "text-offwhite" : "text-pink",
                );
                toggle.classList.add("text-offwhite");
            }
        });
    });
</script>
